Search.setIndex({"docnames": ["index", "installation", "manual", "manual/api", "manual/backends", "manual/cli", "manual/corefs", "manual/discovering-patterns", "manual/hypergraph-operations", "manual/internals", "manual/internals/create-backend", "manual/internals/create-parser", "manual/meaning", "manual/notation", "manual/notebooks", "manual/overview", "manual/parsing", "manual/patterns", "manual/readers", "manual/special-relations", "team", "thanks", "tutorials", "tutorials/claims", "tutorials/conflicts", "tutorials/hypergraph-operations", "tutorials/parsing-a-book", "tutorials/parsing-a-sentence"], "filenames": ["index.rst", "installation.rst", "manual.rst", "manual/api.rst", "manual/backends.rst", "manual/cli.rst", "manual/corefs.rst", "manual/discovering-patterns.rst", "manual/hypergraph-operations.rst", "manual/internals.rst", "manual/internals/create-backend.rst", "manual/internals/create-parser.rst", "manual/meaning.rst", "manual/notation.rst", "manual/notebooks.rst", "manual/overview.rst", "manual/parsing.rst", "manual/patterns.rst", "manual/readers.rst", "manual/special-relations.rst", "team.rst", "thanks.rst", "tutorials.rst", "tutorials/claims.rst", "tutorials/conflicts.rst", "tutorials/hypergraph-operations.rst", "tutorials/parsing-a-book.rst", "tutorials/parsing-a-sentence.rst"], "titles": ["Graphbrain \u2013 Language, Knowledge, Cognition", "Installation", "Manual", "API reference", "Hypergraph database backends", "Command-line interface", "Co-reference resolution", "Discovering patterns", "Basic hypergraph operations", "Internals and extending Graphbrain", "Creating a new hypergraph database backend", "Creating and training a new parser", "Meaning extraction", "Semantic Hypergraph notation", "Notebooks and visualizations", "Overview", "Parsing natural language", "Patterns", "Readers", "Special relations", "Team", "Thanks", "Tutorials and examples", "Actors making claims", "Extracting conflict networks from news headers", "Hypergraph operations", "Parsing a book", "Parsing a sentence"], "terms": {"new": [0, 2, 3, 4, 5, 9, 15, 22], "public": 0, "The": [0, 1, 2, 3, 4, 5, 7, 11, 13, 14, 15, 16, 17, 19, 25, 27], "preprint": 0, "our": [0, 1], "first": [0, 3, 4, 7, 8, 13, 14, 15, 16, 17], "relat": [0, 2, 3, 7, 8, 13], "articl": 0, "semant": [0, 2, 7, 8, 15, 16, 17], "hypergraph": [0, 2, 5, 7, 9, 16, 17, 19, 22], "i": [0, 1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 19, 21, 25, 27], "now": [0, 1, 7, 8, 11], "avail": [0, 3, 8], "arxiv": 0, "subscrib": 0, "mail": 0, "list": [0, 3, 5, 8, 15, 16, 17], "an": [0, 3, 4, 5, 7, 8, 11, 13, 15, 17, 19, 21, 22, 27], "artifici": [0, 7], "intellig": [0, 7, 27], "open": [0, 3, 4, 7, 8, 21, 25], "sourc": [0, 1, 3, 4, 5, 7, 8, 15, 21], "softwar": 0, "librari": [0, 4, 8, 16, 21], "scientif": [0, 27], "research": [0, 20], "tool": [0, 1, 4, 7], "Its": 0, "aim": 0, "facilit": [0, 7], "autom": 0, "mean": [0, 2, 3, 13, 15, 17], "extract": [0, 1, 2, 3, 4, 7, 8, 9, 22], "text": [0, 3, 5, 7, 8, 9, 15, 16, 25, 27], "understand": 0, "well": [0, 8, 11, 15, 17], "explor": [0, 2, 4, 13], "infer": [0, 2, 3, 5, 7, 15, 19], "It": [0, 1, 4, 5, 7, 8, 11, 15, 16, 17, 19], "part": [0, 3, 13, 15, 17], "socsem": 0, "project": [0, 1, 4, 21], "fund": 0, "european": 0, "council": 0, "focus": [0, 2], "fragment": 0, "onlin": 0, "space": [0, 4, 8, 13, 15], "ambit": 0, "thi": [0, 1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 17, 19, 25, 27], "simpli": [0, 3, 7, 8, 17, 25], "contribut": [0, 4], "advanc": 0, "state": [0, 15], "art": 0, "ai": [0, 7], "princip": 0, "effect": 0, "interdisciplinari": 0, "more": [0, 3, 4, 7, 13, 14, 15, 16, 17], "specif": [0, 1, 2, 7, 8, 14, 15, 16, 17, 19, 27], "we": [0, 1, 4, 7, 8, 13, 15, 16, 17, 21, 22, 25, 27], "ar": [0, 1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 19, 21, 25, 27], "interest": [0, 4, 7, 8], "possibl": [0, 1, 7, 8, 11, 13, 14, 15, 16, 17, 27], "field": [0, 3, 5, 16], "comput": [0, 3, 15, 20, 27], "social": [0, 20], "scienc": [0, 11, 20], "human": [0, 3, 7, 13, 15], "built": [0, 3, 13, 19], "around": 0, "unifi": [0, 15], "concept": [0, 5, 7, 8, 15, 17], "sh": [0, 1, 7, 8, 13, 15, 17], "which": [0, 1, 3, 7, 8, 13, 14, 15, 16, 17, 25], "make": [0, 1, 3, 4, 8, 11, 13, 15, 22, 25], "repres": [0, 3, 13, 14, 15, 16, 17], "natur": [0, 1, 2, 3, 8, 13, 15, 19, 21, 27], "sentenc": [0, 3, 5, 7, 8, 9, 13, 15, 16, 22], "einstein": [0, 14, 16], "publish": [0, 14, 16], "theori": [0, 8, 14, 16], "rel": [0, 4, 13, 14, 16], "1905": [0, 14, 16], "order": [0, 3, 8, 13, 15, 17, 21], "recurs": [0, 3, 7, 8, 15, 25], "hyperlink": 0, "form": [0, 13, 16, 25], "enabl": [0, 16], "hybrid": 0, "approach": 0, "combin": [0, 7, 8, 15], "symbol": [0, 4, 13], "statist": 0, "connectionist": 0, "machin": [0, 1, 13, 27], "learn": [0, 1], "method": [0, 1, 3, 7, 8, 15, 17, 27], "two": [0, 2, 3, 7, 11, 13, 14, 15, 17, 19], "main": [0, 2, 13, 16, 19], "reason": [0, 1, 16], "reproduc": 0, "strength": [0, 21], "both": [0, 3, 5, 8, 14, 15, 17], "written": [0, 21], "python": [0, 1, 4, 5, 8, 11, 16, 21, 27], "take": [0, 4, 8, 16, 17, 27], "advantag": [0, 17], "integr": 0, "rich": [0, 7, 8, 15], "environ": [0, 1, 4, 25], "releas": [0, 1, 4, 16], "under": [0, 8], "highli": 0, "permiss": 0, "mit": 0, "licens": 0, "instal": [0, 4, 8, 16], "pip": [0, 4], "recommend": 0, "from": [0, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 19, 21, 22, 25, 27], "code": [0, 4, 13, 25, 27], "repositori": [0, 4], "github": [0, 4, 11, 21, 25, 27], "prerequisit": 0, "tutori": [0, 25, 27], "exampl": [0, 2, 3, 4, 5, 8, 11, 13, 15, 16, 17, 19, 25, 27], "pars": [0, 2, 3, 7, 8, 11, 22], "oper": [0, 2, 7, 22], "conflict": [0, 1, 22], "network": [0, 8, 15, 21, 22], "header": [0, 22], "book": [0, 8, 22], "actor": [0, 15, 22, 24], "claim": [0, 15, 22], "manual": [0, 9, 15], "overview": [0, 2, 5], "notat": [0, 2, 3, 8], "special": [0, 2, 3, 4, 8, 16, 17], "basic": [0, 2, 13, 17], "pattern": [0, 2, 5, 8, 15, 22], "discov": [0, 2], "reader": [0, 2, 15], "co": [0, 2], "refer": [0, 1, 2, 5, 8, 16, 17, 19, 25, 27], "resolut": [0, 1, 2, 3, 5, 21], "databas": [0, 2, 3, 5, 7, 8, 9, 17, 25], "backend": [0, 2, 8, 9, 15], "notebook": [0, 2, 22, 25], "visual": [0, 2, 4, 27], "command": [0, 1, 2, 4, 7], "line": [0, 1, 2, 4, 7, 14], "interfac": [0, 2, 3, 8, 15, 21], "intern": [0, 2, 7, 20], "extend": [0, 2, 13, 16], "api": [0, 2, 8, 15, 25], "team": 0, "thank": [0, 1, 15], "spaci": [0, 1, 16], "hug": 0, "face": 0, "": [0, 1, 3, 5, 7, 8, 13, 14, 15, 16, 17, 19, 20, 25, 27], "neuralcoref": [0, 16], "leveldb": [0, 1, 2, 8, 15], "index": [0, 3], "modul": [0, 2, 5, 7], "search": [0, 2, 3, 4, 15, 22], "page": [0, 7], "graphbrain": [1, 2, 3, 4, 5, 7, 11, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27], "compat": [1, 4], "64": [1, 4], "bit": 1, "cpython": [1, 4], "3": [1, 2, 3, 7, 8, 13, 16, 25, 27], "6": [1, 3, 4, 7, 13, 16], "9": [1, 7], "window": 1, "current": [1, 3, 4, 5, 7, 8, 14, 15, 16, 25], "have": [1, 3, 4, 7, 8, 13, 15, 16, 19, 25, 27], "binari": 1, "onli": [1, 3, 5, 7, 8, 13, 15, 16, 17, 19, 25, 27], "given": [1, 2, 3, 7, 17, 25], "work": [1, 2, 4, 5, 7, 15, 17, 21, 22, 25], "build": [1, 2, 3, 4, 8, 13, 15, 16], "should": [1, 3, 4, 8, 11, 13, 27], "equal": 1, "simpl": [1, 2, 5, 8, 13, 15, 19, 27], "moment": 1, "less": [1, 7], "straightforward": [1, 25], "becaus": [1, 8, 13, 16, 17], "depend": [1, 4], "turn": 1, "requir": [1, 4, 8, 16, 27], "effort": 1, "o": [1, 7, 13, 14], "case": [1, 3, 4, 5, 7, 8, 11, 13, 15, 17, 19, 24, 25, 27], "check": [1, 3, 4, 8], "your": [1, 2, 4], "sure": [1, 4], "you": [1, 4, 5, 7, 8, 15], "us": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 19, 22, 24, 25, 27], "version": [1, 3, 4, 13], "import": [1, 4, 7, 8, 14, 15, 16, 17, 25, 27], "user": [1, 8], "need": [1, 4, 8, 15], "befor": [1, 3, 4, 8, 17], "pleas": [1, 3, 4, 16], "section": [1, 7, 8, 16], "below": [1, 4, 5, 13, 25], "detail": [1, 4, 5, 8, 14, 15, 25, 27], "advis": [1, 8], "virtual": 1, "avoid": 1, "system": [1, 4, 5, 8, 15], "wide": [1, 8], "packag": [1, 2, 4, 14, 16], "creat": [1, 2, 3, 4, 7, 9, 16, 22, 27], "nice": [1, 4, 8, 13, 15], "self": [1, 3], "contain": [1, 2, 3, 7, 13, 14, 15, 16, 25, 27], "particularli": [1, 8, 21, 27], "maintain": [1, 3, 20], "downstream": 1, "keep": [1, 4, 7, 8, 13, 19], "result": [1, 3, 7, 8, 11, 13, 16, 25, 27], "consist": [1, 3], "To": [1, 4, 7, 8, 11, 13, 15, 16], "directori": [1, 4, 5, 7, 11, 15], "can": [1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 17, 19, 25, 27], "do": [1, 8, 15], "virtualenv": 1, "p": [1, 3, 5, 7, 8, 13, 14, 15, 16, 17, 19, 27], "path": [1, 3, 4, 8], "python3": [1, 4], "venv": 1, "common": [1, 3, 7, 13, 22], "locat": [1, 4], "usr": [1, 4], "local": [1, 2, 4, 13, 15], "bin": [1, 4], "If": [1, 3, 4, 7, 25], "instead": [1, 3, 7, 8, 15], "explain": [1, 4, 8], "here": [1, 4, 5, 7, 8, 11, 13, 15, 16, 25, 27], "m": [1, 3, 5, 7, 8, 11, 13, 14, 16, 17, 25], "Then": [1, 13, 17], "switch": 1, "activ": 1, "still": [1, 17], "necessari": [1, 11], "download": [1, 4], "languag": [1, 2, 3, 5, 8, 13, 17, 21, 27], "model": [1, 2, 4, 16, 27], "en_core_web_trf": 1, "want": [1, 13], "corefer": [1, 2, 3, 5, 21], "also": [1, 3, 4, 7, 8, 11, 14, 15, 16, 17, 19, 25, 27], "follow": [1, 3, 4, 7, 8, 11, 13, 15, 16, 19, 21, 25], "http": [1, 4, 5, 7, 11, 15, 20, 21, 25, 27], "com": [1, 4, 11, 20, 21, 25, 27], "explos": 1, "experiment": 1, "v0": 1, "0": [1, 3, 4, 8, 11, 16], "en_coreference_web_trf": 1, "4": [1, 4, 16], "0a0": 1, "py3": 1, "none": [1, 3], "ani": [1, 3, 7, 8, 13, 15, 17], "whl": 1, "anoth": [1, 4, 8, 13, 15, 16], "wai": [1, 4, 5, 7, 8, 15, 17, 25, 27], "wish": 1, "chang": [1, 8, 27], "base": [1, 4, 8, 13, 15], "start": [1, 3, 7, 17, 27], "clone": 1, "git": [1, 4], "cd": 1, "previou": [1, 7, 8, 11], "cython": 1, "option": [1, 3, 4, 5, 8, 13, 14, 17], "abov": [1, 3, 4, 7, 8, 11, 13, 15, 16, 17, 19, 27], "help": [1, 5, 8, 16, 17, 19], "dev": 1, "root": [1, 2, 3, 5, 8, 16, 19, 27], "pytest": 1, "notic": [1, 7, 8, 11, 15, 16, 25, 27], "includ": [1, 2, 3, 4, 8, 13, 16, 17, 25], "mention": 1, "ignor": [1, 4], "alreadi": [1, 3, 8, 13, 16, 25], "distribut": [1, 4, 5, 15, 16], "divers": 1, "term": [1, 8, 19], "manag": [1, 8], "appropri": [1, 19], "gcc": 1, "builder": [1, 3, 16], "xcode": 1, "select": [1, 24], "homebrew": [1, 4], "brew": [1, 4], "sudo": 1, "easy_instal": 1, "h": [1, 4, 5], "1": [1, 3, 4, 8, 13, 16], "22": [1, 4], "longer": 1, "support": [1, 4, 8, 16], "custom": [1, 4], "formula": [1, 4], "provid": [1, 3, 5, 7, 8, 11, 13, 14, 15, 16, 17, 19, 21, 22, 25, 27], "tap": [1, 4], "wa": [1, 4, 8, 16], "fork": 1, "bagonyi": [1, 4], "david": 1, "As": [2, 8, 13, 17], "syntact": 2, "rule": 2, "knowledg": [2, 5, 7, 13, 25], "agent": [2, 5, 7, 13], "hyperedg": [2, 5, 7, 14, 15, 16, 17, 19, 22, 27], "type": [2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 19, 25], "argument": [2, 3, 5, 7, 8, 14, 15, 17], "role": [2, 3, 15, 16, 17], "subtyp": [2, 3, 14, 17], "further": [2, 3, 8, 15, 17, 19], "addit": [2, 4, 8, 15, 16], "inform": [2, 3, 4, 15, 16, 19], "namespac": [2, 3, 5, 8, 14], "full": [2, 5, 8, 11, 15, 16, 17], "atom": [2, 3, 7, 8, 11, 14, 15, 16, 17, 19, 27], "structur": [2, 3, 4, 7, 15, 16, 17], "taxonomi": [2, 5, 15], "lemma": 2, "central": [2, 3, 15], "function": [2, 13, 14, 15, 17, 25, 27], "hgraph": [2, 3, 7, 17, 25], "hedg": [2, 3, 14, 17], "manipul": [2, 5, 15], "popul": [2, 7, 16], "ad": [2, 3, 4, 13, 25], "mani": [2, 7], "batch": 2, "speed": 2, "neighborhood": 2, "star": [2, 3], "set": [2, 3, 4, 7, 15, 16, 17, 19, 25], "degre": [2, 3], "deep": [2, 3], "attribut": [2, 3, 15], "global": 2, "counter": [2, 3, 7], "sequenc": [2, 3, 5, 13, 17, 22], "wildcard": [2, 3, 7, 8], "non": [2, 3, 8, 11, 13, 15], "strict": [2, 3], "match": [2, 3, 8, 25], "argrol": [2, 3, 14], "variabl": [2, 3, 4, 27], "A": [2, 3, 5, 8, 11, 13, 15, 24], "control": [2, 14], "expans": 2, "explicit": [2, 13, 16], "own": [2, 4], "parser": [2, 5, 9, 19, 25, 27], "level": [2, 7, 8, 13, 14, 15, 19], "gender": [2, 3, 19], "number": [2, 4, 8, 11, 13, 17, 19, 25], "animaci": 2, "sqlite": [2, 8], "train": [2, 5, 9], "processor": 2, "coref": [5, 16, 19], "memori": [2, 4, 8, 15], "util": [2, 4, 13, 27], "__init__": 3, "locator_str": [3, 8], "return": [3, 8, 17, 25, 27], "instanc": [3, 7, 8, 13, 15, 17, 25], "identifi": [3, 5, 7, 8, 13, 16], "doe": [3, 4, 7, 8, 16, 17, 21, 25], "exist": [3, 4, 8, 21, 25, 27], "location_str": 3, "sqlite3": [3, 4, 8], "file": [3, 4, 5, 8, 11, 15], "folder": [3, 4], "class": [3, 7, 8, 9], "edg": [3, 5, 7, 8, 14, 15, 16, 17, 22, 27], "paren": 3, "fals": [3, 4, 7, 8, 14, 16, 17], "all_atom": 3, "all": [3, 5, 7, 8, 13, 16, 17, 22, 27], "unlik": 3, "repeat": 3, "thei": [3, 8, 13, 15, 16, 17, 19], "differ": [3, 7, 8, 11, 13, 15], "object": [3, 7, 8, 13, 15, 17, 25, 27], "For": [3, 4, 5, 7, 8, 11, 13, 15, 17, 19, 25], "consid": [3, 8, 13, 16], "md": [3, 7, 13, 16, 25, 27], "br": [3, 13, 16, 27], "mayor": 3, "cc": [3, 4, 13, 16, 17, 19, 25, 27], "citi": [3, 5, 15, 19], "c": [3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 27], "string": [3, 8, 13, 16, 21, 27], "otherwis": [3, 13], "empti": [3, 5, 16, 25], "atom_with_typ": 3, "atom_typ": 3, "found": [3, 4, 7, 11, 25, 27], "ha": [3, 7, 8, 16], "whose": 3, "b": [3, 5, 7, 8, 13, 14, 15, 16, 19, 27], "cn": [3, 13], "bp": [3, 13, 16], "cp": [3, 13, 14, 16, 17, 19, 25, 27], "connector_typ": 3, "connector": [3, 13, 15, 19], "e": [3, 4, 8, 13, 15, 16, 19], "needl": 3, "keyword": 3, "default": [3, 7, 8, 14, 16, 19], "depth": [3, 7], "maxim": [3, 7], "edges_with_argrol": 3, "insert_argrol": 3, "po": 3, "insert": [3, 8, 15], "specifi": [3, 5, 7, 8, 13, 14, 15, 16, 17, 19], "posit": [3, 5, 8, 13, 15, 16, 17], "same": [3, 7, 8, 11, 13, 15, 17, 19], "restrict": [3, 16], "replace_argrol": 3, "appli": [3, 4, 17], "insert_first_argu": 3, "place": [3, 15], "item": [3, 15, 16, 17], "after": [3, 4, 8, 13, 17], "becom": [3, 7, 8], "d": [3, 8, 15], "is_atom": [3, 8], "label": [3, 8, 15, 17], "gener": [3, 4, 7, 8, 9, 13, 15, 16, 17, 19, 25], "readabl": 3, "entiti": [3, 8, 13, 15, 25], "main_concept": 3, "g": [3, 4, 8, 13, 15, 19], "am": [3, 13, 16, 27], "zimbabw": 3, "mp": [3, 7, 13, 16], "economi": 3, "its": [3, 4, 7, 8, 13, 15, 16, 19, 20, 21], "annot": [3, 9, 13, 15], "one": [3, 4, 7, 8, 11, 13, 15, 16, 17, 19, 25, 27], "split": [3, 9], "predic": [3, 7, 8, 15, 19], "itself": [3, 13, 15, 16], "predicate_atom": [], "replac": [3, 4, 7, 27], "replace_atom": 3, "old": [3, 25], "uniqu": 3, "everi": [3, 8, 13, 15], "exact": [3, 13], "uniqueatom": 3, "replace_atom_part": 3, "part_po": 3, "replace_main_concept": 3, "new_main": 3, "todo": [3, 6, 10, 11, 12, 18, 23, 26], "document": [3, 8, 25], "subrol": 3, "second": [3, 8, 13, 16, 17, 27], "right": [3, 4], "dot": 3, "separ": 3, "assum": [3, 15, 25], "In": [3, 4, 8, 13, 15, 16, 17, 19, 27], "just": [3, 8], "j": [3, 7, 13, 14, 16, 27], "simplifi": [3, 13], "true": [3, 8, 14, 16], "remov": [3, 4, 8, 15, 16], "size": [3, 4, 8, 19], "total": [3, 8], "subedg": [3, 8], "to_str": [3, 27], "roots_onli": 3, "convert": [3, 5, 8, 15], "represent": [3, 8, 15, 17, 19, 27], "connect": [3, 8, 15, 19], "end": [3, 4, 7, 8, 25], "must": [3, 4], "collect": [3, 7, 8, 9, 27], "produc": [3, 5, 7, 8, 14, 15, 16, 25, 27], "contains_atom_typ": 3, "so": [3, 4, 7, 8, 16, 17, 19, 25], "appear": [3, 4, 8], "insert_edge_with_argrol": 3, "flat": 3, "element": [3, 7, 8, 13, 15, 16], "either": [3, 5, 15], "treat": [3, 8], "when": [3, 7, 8, 13, 15, 16, 17], "last": [3, 13, 19], "respect": [3, 8, 17], "perform": [3, 4, 5, 8, 13, 17, 22, 25, 27], "build_atom": 3, "other": [3, 4, 7, 8, 13, 15, 16, 17, 21], "edges2str": 3, "outer": [3, 8], "parenthesi": 3, "split_edge_str": 3, "shallow": 3, "token": [3, 16], "without": [3, 8, 15], "str2atom": 3, "valid": [3, 8, 13, 15, 17], "add": [3, 4, 8, 17, 22], "primari": [3, 7, 8], "count": [3, 7, 8], "yet": [3, 13], "children": [3, 25], "purpos": [3, 8, 13, 15], "pass": [3, 16, 27], "format": [3, 15, 19], "toward": 3, "easi": [3, 25], "find": [3, 5, 7, 15], "queri": [3, 7, 8, 17], "integ": [3, 8], "increment": [3, 8], "add_to_sequ": [3, 8], "add_with_attribut": 3, "along": 3, "dictionari": [3, 16, 17, 27], "valu": [3, 4, 15, 17, 21], "all_attribut": 3, "tupl": [3, 8, 16, 17], "each": [3, 5, 7, 13, 15, 16, 17, 27], "all_non_atom": 3, "atoms_with_root": 3, "close": [3, 15], "see": [3, 7, 8, 16, 25, 27], "explan": 3, "dec_attribut": [3, 8], "deep_degre": [3, 8], "destroi": 3, "eras": 3, "entir": [3, 16, 19], "edges_with_edg": [3, 8], "ego": 3, "center": 3, "directli": [3, 8, 13, 16, 27], "get_float_attribut": [3, 8], "or_els": 3, "float": [3, 8], "give": [3, 16, 17], "get_int_attribut": [3, 8], "get_str_attribut": [3, 8], "inc_attribut": [3, 8], "initi": [3, 8, 27], "is_primari": [3, 7, 8], "remove_by_pattern": 3, "root_degre": 3, "share": [3, 19], "sum": 3, "These": [3, 8, 13, 14, 15, 16, 17], "paramet": [3, 13, 16, 19], "themselv": [3, 8, 15, 17], "famili": 3, "emploi": [3, 13, 16], "indic": [3, 13, 16, 17, 19, 25], "pd": [3, 13, 14, 16, 17, 19, 25, 27], "sai": [3, 7, 15, 16], "strictli": 3, "allow": [3, 7, 8, 11, 13, 15, 17, 27], "target": [3, 4], "plai": [3, 8, 13, 15, 17, 25], "mode": [3, 7, 8, 17], "exactl": 3, "slower": 3, "iter": [3, 7, 8, 17, 22], "present": [3, 5, 11, 13, 17], "set_attribut": [3, 8], "set_primari": 3, "limit": 3, "maximum": [3, 7], "infinit": [3, 13, 16], "sum_deep_degre": 3, "sum_degre": 3, "edge_matches_pattern": 3, "is_full_pattern": 3, "matcher": 3, "uppercas": 3, "letter": 3, "is_pattern": 3, "defin": [3, 4, 8, 11, 13, 15, 17, 19, 25], "least": [3, 7, 13], "match_pattern": [3, 17], "fit": 3, "x": [3, 13, 17], "assign": [3, 8, 17, 25, 27], "correspond": [3, 8, 13, 16, 17, 25, 27], "my": [3, 13], "mari": [3, 8, 13, 15, 17, 25], "2": [3, 4, 7, 8, 13, 16], "implement": [3, 4, 8, 15], "storag": [3, 4, 15, 21], "do_with_edge_permut": 3, "f": [3, 13, 15, 16, 25, 27], "perm2edg": 3, "transform": [3, 27], "reorder": 3, "vector": 3, "nper": 3, "str_plus_1": 3, "regar": 3, "lexicograph": 3, "unpermut": 3, "revert": 3, "create_pars": [3, 16, 25, 27], "lang": [3, 5, 16, 25, 27], "parser_class": 3, "beta": 3, "repair": 3, "normal": [3, 8, 16], "post_process": 3, "instanceof": 3, "subclass": 3, "instanti": [3, 8], "throw": 3, "except": [3, 27], "en": [3, 4, 7, 13, 16, 19, 20, 21, 25, 27], "english": [3, 13, 16, 27], "extern": 3, "stage": [3, 4, 9, 16], "post": 3, "process": [3, 15, 21], "debug": 3, "transofrm": 3, "adit": 3, "inferred_edg": [3, 16], "dure": [3, 16], "y": [3, 13], "relationship": [3, 8, 15, 16, 17], "main_edg": [3, 16, 25, 27], "extra_edg": [3, 16], "edges_text": 3, "resolv": 3, "all_concept": 3, "has_common_or_proper_concept": 3, "proper": [3, 13], "has_proper_concept": 3, "strip_concept": 3, "strip": 3, "awai": 3, "nest": [3, 15], "trigger": [3, 7], "subpred": 3, "expos": 3, "outmost": 3, "leftmost": 3, "mai": [3, 4, 15, 17, 25], "against": 3, "t": [3, 7, 13, 14, 16, 17, 27], "treati": 3, "pari": [3, 20], "deep_lemma": 3, "hg": [3, 4, 5, 7, 8, 17, 25], "same_if_non": 3, "descend": 3, "alwai": [3, 8, 13], "choos": [3, 4, 8], "immediatli": 3, "verb": [3, 13, 16, 19], "go": [3, 4, 7, 13], "could": [3, 7, 13, 15, 16, 27], "lemma_degre": 3, "supertyp": 3, "futur": [4, 13], "expect": 4, "fulli": [4, 15], "even": [4, 7, 17], "higher": [4, 15], "small": 4, "huge": 4, "dataset": [4, 9], "fault": 4, "toler": 4, "etc": [4, 17, 19], "peopl": 4, "develop": [4, 7, 16, 20, 27], "veri": [4, 8, 13, 15, 25, 27], "welcom": 4, "extens": [4, 8], "db": [4, 5, 7, 8, 17, 25], "pro": 4, "univers": [4, 15, 20], "nativ": [4, 8], "fast": [4, 8, 17, 21], "concurr": 4, "access": [4, 5, 15, 16], "singl": [4, 8, 15, 27], "con": 4, "effici": [4, 8, 15], "possibli": [4, 7, 15], "come": [4, 7, 8, 13, 16], "vamilla": 4, "hard": [4, 8], "outsid": [4, 5, 8, 15, 17], "linux": [4, 8], "filesytem": 4, "high": 4, "kei": [4, 15, 21], "store": [4, 8, 15, 17, 19, 25], "instruct": [4, 8, 16], "plyvel": [4, 21], "unfortun": 4, "outsisd": 4, "best": 4, "latest": [4, 21], "wrapper": 4, "solut": 4, "With": [4, 8, 11], "achiev": [4, 7, 8, 17], "might": [4, 7, 8, 14], "caus": [4, 7, 27], "error": 4, "preexist": 4, "uninstal": 4, "23": [4, 7], "cmakelist": 4, "txt": [4, 5, 11], "cmake_cxx_flag": 4, "fno": 4, "rtti": 4, "wbolster": 4, "issu": [4, 15], "114": 4, "where": [4, 7, 8, 13, 15, 16, 17, 27], "observ": 4, "big": 4, "sur": 4, "macbook": 4, "laptop": 4, "m1": 4, "chip": 4, "unknown": 4, "get": [4, 7], "messag": [4, 5], "importerror": 4, "dlopen": 4, "opt": 4, "anaconda3": 4, "lib": 4, "8": [4, 13, 16], "site": 4, "38": 4, "darwin": 4, "_ztin7leveldb10comparator": 4, "referenc": 4, "_plyvel": 4, "libleveldb": 4, "dylib": 4, "conda": 4, "forg": 4, "boost": 4, "compil": 4, "x64": 4, "step": 4, "unzip": 4, "www": [4, 20], "org": [4, 7], "cl": 4, "prompt": 4, "vs2017": 4, "run": [4, 7], "bootstrap": 4, "bat": 4, "b2": 4, "ex": 4, "bjam": 4, "5": [4, 7, 16], "modifi": [3, 4, 7, 8, 15], "config": 4, "jam": 4, "msvc": 4, "14": 4, "vc": 4, "250117": 4, "hostx64": 4, "note": [4, 16], "v": 4, "ii": 4, "_cl": 4, "exe_": 4, "hour": 4, "name": [4, 5, 8, 11, 13, 16], "toolset": 4, "address": 4, "stagedir": 4, "mylib": 4, "bin1": 4, "vc14": 4, "thread": [4, 15], "multi": 4, "complet": [4, 7, 16], "dir": 4, "boost_1_64_0": 4, "care": 4, "about": [4, 8, 15, 16, 25], "vaskomitanov": 4, "studio": 4, "2017": 4, "preprocessor": 4, "definit": [4, 17], "leveldb_platform_window": 4, "os_win": 4, "win32": 4, "windowsinclud": 4, "click": [4, 8], "finish": [4, 7], "properti": [3, 4], "configur": 4, "linker": 4, "libboost64stagelib": 4, "exclud": 4, "tip": 4, "_test": 4, "_bench": 4, "port": 4, "port_android": 4, "port_posix": 4, "env_posix": 4, "dbc": 4, "delet": 4, "unistd": 4, "portport": 4, "endif": 4, "elif": 4, "port_win": 4, "rememb": [4, 7], "setup": 4, "py": [4, 11], "r": [4, 7, 8, 13], "libboost_chrono": 4, "vc141": 4, "mt": 4, "1_69": 4, "libboost_date_tim": 4, "libboost_filesystem": 4, "libboost_system": 4, "libboost_thread": 4, "cmake": 4, "offici": 4, "guidanc": 4, "cgold": 4, "readthedoc": [4, 21], "io": [4, 21], "html": [4, 5, 15, 25], "execut": [5, 25], "varieti": [5, 8], "task": [5, 8, 13, 15, 22, 25, 27], "script": [5, 11, 16], "usag": 5, "indir": [5, 11], "infil": [5, 11], "outdir": 5, "outfil": [5, 11], "show_namespac": 5, "training_data": [5, 11], "url": [5, 7], "show": [5, 13, 14, 15, 25, 27], "exit": 5, "input": [5, 11, 15], "output": [5, 8, 17], "data": [5, 7, 9, 16], "ml": 5, "obligatori": 5, "subset": 5, "hypergraph_databas": 5, "json": [5, 11], "json_fil": 5, "program": [5, 15], "some": [5, 7, 8, 15, 16, 25, 27], "introspect": [5, 15], "content": [5, 15, 16], "deriv": [5, 8, 15, 16, 19], "black": [5, 15], "cat": [5, 15], "berlin": [5, 13, 15, 19, 20], "like": [3, 5, 8, 13, 15, 16, 17, 27], "type_of": [5, 15, 19], "certain": [5, 7, 15, 17], "introduc": [5, 8, 13, 15, 17], "txt_parser": [5, 15], "receiv": [5, 15], "detect": [5, 15], "some_test_fil": 5, "net": [5, 15, 20, 25], "discoveri": 7, "patterncount": 7, "By": 7, "feed": 7, "obtain": [7, 8, 11, 25, 27], "most": [7, 8, 13, 17, 27], "frequent": [7, 8, 13], "empir": 7, "guid": 7, "tune": 7, "focu": 7, "construct": [3, 7, 13, 15, 16], "abstract": [7, 8, 15], "exemplifi": 7, "let": [7, 8, 15, 16, 17, 25, 27], "u": [7, 8, 15, 16, 17, 27], "real": 7, "wikipedia": [7, 11, 14], "discuss": [7, 8, 11, 15, 17], "subsequ": [7, 13], "enough": [7, 13], "know": [7, 8, 19], "wiki": 7, "artificial_intellig": 7, "onc": [7, 16], "pc": 7, "through": [7, 8, 17, 22], "time": [7, 8, 13, 15, 16], "call": [7, 8, 27], "inner": [3, 7, 15], "10": [7, 16], "most_common": 7, "2208": 7, "1867": 7, "ma": [7, 8, 13, 16, 19, 25, 27], "1315": 7, "708": 7, "628": 7, "456": 7, "448": 7, "385": 7, "315": 7, "mm": 7, "266": 7, "count_subedg": 7, "top": [7, 8, 16, 25], "1569": 7, "131": 7, "55": 7, "30": 7, "29": 7, "26": 7, "24": 7, "domin": 7, "conjunct": [7, 13, 16], "expand": 7, "up": [7, 8], "reach": 7, "max_depth": 7, "anyth": 7, "would": [7, 13, 16, 17, 25], "constitu": 7, "ones": [7, 8, 13, 15], "saw": 7, "constructor": 7, "howev": [7, 8], "thing": [7, 8, 13, 19], "fed": 7, "happen": [7, 8, 27], "146": 7, "sc": [7, 13, 17, 27], "92": 7, "sx": [7, 14], "65": 7, "sr": [7, 16], "57": 7, "sox": [7, 13, 14, 16, 17], "54": 7, "px": 7, "37": 7, "ox": 7, "35": 7, "27": [7, 13], "seen": [7, 15, 17, 25], "far": 7, "abl": [7, 8, 11], "match_root": 7, "actual": [7, 15], "17": 7, "perceiv": 7, "spell": 7, "express": [7, 8, 13, 15], "exploit": 7, "machineri": 7, "variat": 7, "rest": 7, "One": [7, 8, 15, 17], "again": 7, "match_subtyp": 7, "logic": 7, "inclus": 7, "341": 7, "118": 7, "53": 7, "45": 7, "36": 7, "25": 7, "21": 7, "18": 7, "countless": 7, "hope": [7, 16], "block": [7, 14], "describ": [7, 8, 15], "certainli": 7, "capabl": 7, "being": [7, 8], "author": 7, "did": 7, "think": [7, 15], "At": [8, 15, 16], "heart": 8, "li": 8, "practic": 8, "talk": 8, "them": [8, 17], "searchabl": 8, "persist": [8, 15], "upon": 8, "aspect": [8, 13, 16], "reli": [8, 16], "fundament": [8, 15, 25, 27], "fact": [8, 13, 15, 17], "latter": [8, 16, 17], "conveni": 8, "lot": 8, "meant": [8, 14, 16], "conform": 8, "chess": [3, 8, 17], "hyerpedg": 8, "person": [8, 13], "rang": 8, "selector": 8, "automat": 8, "subrang": 8, "guarante": [8, 15], "tulp": 8, "nevertheless": 8, "often": [8, 17], "test": [3, 8, 9, 27], "determin": [8, 13], "filesystem": 8, "alic": [8, 16, 17], "popular": [8, 27], "disadvantag": 8, "problem": 8, "larg": [8, 24, 27], "better": 8, "impli": 8, "distinct": [8, 13], "made": [8, 16], "notion": [8, 15], "while": [8, 13, 15, 16, 17], "moon": 8, "jupit": 8, "much": 8, "faster": 8, "done": 8, "bath": 8, "hopen": 8, "context": 8, "statement": [8, 13, 15], "similarli": 8, "large_edge_list": 8, "sinc": [3, 8, 15], "never": 8, "hurt": 8, "analog": 8, "fashion": [8, 15], "graph": [8, 15], "power": [8, 17], "applic": [8, 15, 27], "saturn": 8, "se": 8, "0x102382d30": 8, "exhaust": 8, "sever": [8, 13, 17, 27], "idea": [8, 15], "john": [3, 8], "handbal": 8, "templat": 8, "sophist": [8, 13], "greater": 8, "next": [8, 13, 25], "previous": 8, "convent": 8, "node": 8, "measur": 8, "track": [8, 13], "accept": [8, 14], "transpar": 8, "convers": 8, "few": [8, 27], "wonderland": 8, "read": 8, "account": 8, "calcul": 8, "associ": [8, 15, 20], "programm": 8, "getter": 8, "accord": [8, 14, 17], "desir": [8, 17], "ag": 8, "7": [8, 13, 16], "height": 8, "how": [8, 13, 16, 22, 25, 27], "dd": 8, "equival": [8, 13], "decrement": 8, "red": [3, 8, 13], "button": 8, "noth": 8, "sometim": [8, 17], "occurr": 8, "sheep": 8, "atom_count": 8, "edge_count": 8, "primary_atom_count": 8, "primary_edge_count": 8, "mechan": 8, "organ": 8, "relev": [8, 15, 16], "came": 8, "seq": 8, "furthermor": [8, 17], "seq_attr": 8, "updat": [3, 8], "third": [8, 13, 15], "No": 8, "somewher": 8, "than": [3, 8, 16, 17], "alphabeta": 9, "corpu": 9, "sampl": 9, "alpha": 9, "skeleton": 11, "blob": [11, 25, 27], "master": [11, 20, 25, 27], "parser_xx": 11, "categori": 11, "wikipedia1": 11, "wikipedia2": 11, "books1": 11, "balanc": 11, "later": 11, "accuraci": 11, "parserxx": 11, "xx": 11, "de": [11, 13], "66": 11, "33": 11, "origin": 11, "csv": 11, "overal": 11, "per": [11, 27], "962852897473997": 11, "648": 11, "correct": 11, "out": [11, 15, 16], "673": 11, "9427083333333334": 11, "543": 11, "576": 11, "fiction": 11, "9581881533101045": 11, "275": 11, "287": 11, "9338235294117647": 11, "254": 11, "272": 11, "9482288828337875": 11, "696": 11, "734": 11, "950432730133753": 11, "2416": 11, "2542": 11, "interact": 11, "Of": [11, 13], "cours": [11, 13], "meaning": 11, "sens": [11, 15], "apprais": 11, "across": 11, "kind": 11, "principl": 13, "belong": [3, 13, 19], "eight": 13, "convei": 13, "sky": [13, 15, 17], "blue": [13, 15, 17], "beyond": 13, "gradual": 13, "captur": [13, 15], "great": 13, "deal": 13, "light": 13, "friendli": [13, 15], "devic": 13, "shown": [13, 25], "tabl": 13, "hyepredg": 13, "implicit": 13, "appl": 13, "shoe": [3, 13], "capit": [13, 15], "germani": [13, 15], "1994": 13, "meat": [13, 15], "potato": [13, 15], "question": 13, "condit": [13, 15], "1976": 13, "cr": 13, "regular": 13, "denot": 13, "preced": 13, "squar": 13, "bracket": [13, 17], "subpart": 13, "those": 13, "subject": [13, 17], "passiv": 13, "complement": 13, "direct": [13, 15], "indirect": [13, 16], "parataxi": 13, "interject": 13, "undetermin": 13, "charact": 13, "distinguish": [13, 14], "auxiliari": [13, 16], "founder": [13, 20], "psychoanalysi": 13, "word": [13, 16, 19], "serv": 13, "lowercas": 13, "declar": 13, "ci": [13, 16], "pronoun": [13, 16], "she": [13, 16], "cw": 13, "interrog": 13, "who": [13, 15], "imper": 13, "possess": [13, 16], "adject": 13, "green": 13, "100": 13, "mn": 13, "negat": 13, "mv": [13, 25], "verbal": 13, "tc": 13, "tt": [13, 16, 27], "tempor": 13, "tl": 13, "tm": 13, "modal": 13, "causal": 13, "compar": 13, "concess": 13, "although": [13, 15], "variou": [13, 15], "singular": [13, 16], "plural": 13, "featur": [13, 16], "underli": [13, 16], "tens": [13, 16], "past": 13, "finit": 13, "perfect": 13, "progress": 13, "mood": 13, "left": 13, "unspecifi": 13, "dash": 13, "what": [13, 27], "mw": 13, "four": 13, "modif": 13, "exactli": 13, "been": 13, "pf": [13, 19, 27], "pg": [13, 25], "Or": [3, 13], "german": 13, "himmel": 13, "suppos": 13, "cambridg": [13, 20], "uk": 13, "mass": 13, "usa": 13, "predefin": 13, "compound": 13, "noun": 13, "alan": [13, 19, 27], "ture": [13, 19, 27], "jupyt": [14, 27], "three": [14, 15], "insid": [3, 14], "indent": 14, "syntax": [14, 15], "highlight": 14, "style": [14, 25, 27], "layout": 14, "diagram": 14, "color": 14, "vblock": 14, "similar": [14, 15, 17], "vertic": [14, 15], "spread": 14, "thu": [14, 15], "prefer": [14, 19], "complex": [3, 14, 22], "report": 14, "revolution": 14, "physic": [14, 25], "conceptu": 15, "perspect": 15, "intermediari": 15, "between": [15, 19], "formal": 15, "elabor": 15, "cannot": 15, "analyz": 15, "tradit": 15, "framework": 15, "On": 15, "hand": 15, "n": 15, "ari": 15, "dyadic": 15, "entail": 15, "vertex": 15, "particip": [15, 17], "drawn": 15, "illustr": [15, 22], "carri": 15, "within": 15, "propos": 15, "arbitrari": [15, 19, 25], "proposit": 15, "highest": 15, "mountain": 15, "brazil": 15, "arbitrarili": 15, "climb": 15, "yield": [3, 15], "leav": 15, "elsewher": 15, "familiar": 15, "lisp": 15, "isomoph": 15, "pure": [15, 17], "accident": 15, "\u03bb": 15, "calculu": 15, "minimalist": 15, "race": 15, "cab": 15, "potenti": [15, 27], "assert": 15, "ground": 15, "truth": 15, "particular": 15, "analysi": 15, "controversi": 15, "topic": 15, "multipl": 15, "contradictori": 15, "view": 15, "concret": 15, "sort": 15, "crucial": 16, "cover": 16, "parse_result": 16, "20": 16, "load": [16, 27], "mandatori": 16, "typic": 16, "look": [16, 17], "fail": 16, "atom2word": 16, "atom2token": 16, "spacy_sent": 16, "piec": 16, "linguist": 16, "known": 16, "reduc": [16, 27], "why": 16, "kept": 16, "successor": 16, "her": 16, "dog": 16, "parser_result": 16, "resolved_coref": 16, "poss": 16, "explicitli": [16, 17], "femal": 16, "anim": 16, "briefli": 17, "former": [17, 20], "There": 17, "presenc": 17, "zero": 17, "point": [17, 19], "club": 17, "though": 17, "expens": 17, "independ": 17, "surround": 17, "curli": 17, "scx": 17, "morn": 17, "behavior": 17, "forbid": 17, "brace": 17, "exclus": 17, "placehold": 17, "upper": 17, "player": 17, "perfectli": 17, "offer": 17, "trade": 17, "off": 17, "ca": 17, "obj": 17, "prop": 17, "pair": 19, "act": 19, "main_coref": [3, 19], "conjug": 19, "grammat": 19, "ask": 19, "intent": 19, "dr": 20, "telmo": 20, "menez": 20, "centr": 20, "marc": 20, "bloch": 20, "cnr": 20, "humboldt": 20, "member": 20, "group": 20, "telmomenez": 20, "prof": 20, "camil": 20, "roth": 20, "tenur": 20, "leader": 20, "march": 20, "free": 20, "fr": 20, "chih": 20, "chun": 20, "chen": 20, "engin": 20, "design": 20, "edc": 20, "depart": 20, "abmcet": 20, "yael": 20, "stein": 20, "web": 20, "journalist": 20, "linkedin": 20, "kexin": 20, "ren": 20, "student": 20, "cognit": 20, "cogmast": 20, "kexinren": 20, "vacuum": 21, "benefit": 21, "greatli": 21, "generos": 21, "industri": 21, "huggingfac": 21, "neural": 21, "googl": 21, "map": 21, "And": 21, "increas": 22, "inter": 24, "headlin": 24, "corpora": 24, "pdf": 24, "ipynb": [25, 27], "violin": 25, "subsect": 25, "hyoergraph": 25, "transvers": 25, "onelin": 25, "edge_iter": 25, "extra": 25, "quintessenti": 27, "minut": 27, "1950": 27, "final": 27, "print": 27, "screen": 27, "experi": 27, "handi": 27, "exploratori": 27, "render": 27, "nicer": 27, "someth": 27, "ax": 27, "lt": 27, "clutter": 27, "displai": 27, "signatur": 27, "connector_atom": 3, "condid": 3, "inner_atom": 3, "slow": 3, "steadi": 3, "gp": 3, "not_atom": 3, "deprec": 3, "decor": [], "retain": [], "nose": [], "phase": [], "nose2": [], "are_coref": 3, "edge1": 3, "edge2": 3, "coref_id": 3, "coref_set": 3, "main_coref_from_id": 3, "cref_id": 3, "make_coref": 3, "corefernc": 3, "merg": 3, "recomput": 3, "over": 3, "find_actor": 3, "is_actor": 3}, "objects": {"graphbrain": [[3, 0, 0, "-", "__init__"], [3, 0, 0, "-", "hyperedge"], [3, 0, 0, "-", "hypergraph"], [3, 0, 0, "-", "patterns"], [3, 0, 0, "-", "processor"]], "graphbrain.__init__": [[3, 1, 1, "", "hgraph"]], "graphbrain.hyperedge": [[3, 2, 1, "", "Atom"], [3, 2, 1, "", "Hyperedge"], [3, 2, 1, "", "UniqueAtom"], [3, 1, 1, "", "build_atom"], [3, 1, 1, "", "edges2str"], [3, 1, 1, "", "hedge"], [3, 1, 1, "", "split_edge_str"], [3, 1, 1, "", "str2atom"]], "graphbrain.hyperedge.Atom": [[3, 3, 1, "", "all_atoms"], [3, 3, 1, "", "argroles"], [3, 4, 1, "", "atom"], [3, 3, 1, "", "atom_with_type"], [3, 3, 1, "", "atoms"], [3, 3, 1, "", "connector_atom"], [3, 3, 1, "", "connector_type"], [3, 3, 1, "", "contains"], [3, 3, 1, "", "depth"], [3, 3, 1, "", "edges_with_argrole"], [3, 3, 1, "", "inner_atom"], [3, 3, 1, "", "insert_argrole"], [3, 3, 1, "", "insert_first_argument"], [3, 3, 1, "", "is_atom"], [3, 3, 1, "", "label"], [3, 3, 1, "", "main_concepts"], [3, 4, 1, "", "not_atom"], [3, 3, 1, "", "parts"], [3, 3, 1, "", "replace_argroles"], [3, 3, 1, "", "replace_atom"], [3, 3, 1, "", "replace_atom_part"], [3, 3, 1, "", "replace_main_concept"], [3, 3, 1, "", "role"], [3, 3, 1, "", "root"], [3, 3, 1, "", "roots"], [3, 3, 1, "", "simplify"], [3, 3, 1, "", "size"], [3, 3, 1, "", "subedges"], [3, 3, 1, "", "to_str"], [3, 3, 1, "", "type"]], "graphbrain.hyperedge.Hyperedge": [[3, 3, 1, "", "all_atoms"], [3, 3, 1, "", "argroles"], [3, 4, 1, "", "atom"], [3, 3, 1, "", "atom_with_type"], [3, 3, 1, "", "atoms"], [3, 3, 1, "", "connect"], [3, 3, 1, "", "connector_atom"], [3, 3, 1, "", "connector_type"], [3, 3, 1, "", "contains"], [3, 3, 1, "", "contains_atom_type"], [3, 3, 1, "", "depth"], [3, 3, 1, "", "edges_with_argrole"], [3, 3, 1, "", "inner_atom"], [3, 3, 1, "", "insert_argrole"], [3, 3, 1, "", "insert_edge_with_argrole"], [3, 3, 1, "", "insert_first_argument"], [3, 3, 1, "", "is_atom"], [3, 3, 1, "", "label"], [3, 3, 1, "", "main_concepts"], [3, 4, 1, "", "not_atom"], [3, 3, 1, "", "replace_argroles"], [3, 3, 1, "", "replace_atom"], [3, 3, 1, "", "replace_main_concept"], [3, 3, 1, "", "roots"], [3, 3, 1, "", "sequence"], [3, 3, 1, "", "simplify"], [3, 3, 1, "", "size"], [3, 3, 1, "", "subedges"], [3, 3, 1, "", "to_str"], [3, 3, 1, "", "type"]], "graphbrain.hypergraph": [[3, 2, 1, "", "Hypergraph"]], "graphbrain.hypergraph.Hypergraph": [[3, 3, 1, "", "add"], [3, 3, 1, "", "add_to_sequence"], [3, 3, 1, "", "add_with_attributes"], [3, 3, 1, "", "all"], [3, 3, 1, "", "all_atoms"], [3, 3, 1, "", "all_attributes"], [3, 3, 1, "", "all_non_atoms"], [3, 3, 1, "", "atoms_with_root"], [3, 3, 1, "", "close"], [3, 3, 1, "", "count"], [3, 3, 1, "", "dec_attribute"], [3, 3, 1, "", "deep_degree"], [3, 3, 1, "", "degree"], [3, 3, 1, "", "destroy"], [3, 3, 1, "", "edges_with_edges"], [3, 3, 1, "", "ego"], [3, 3, 1, "", "exists"], [3, 3, 1, "", "get_float_attribute"], [3, 3, 1, "", "get_int_attribute"], [3, 3, 1, "", "get_str_attribute"], [3, 3, 1, "", "inc_attribute"], [3, 3, 1, "", "is_primary"], [3, 3, 1, "", "name"], [3, 3, 1, "", "remove"], [3, 3, 1, "", "remove_by_pattern"], [3, 3, 1, "", "root_degrees"], [3, 3, 1, "", "search"], [3, 3, 1, "", "sequence"], [3, 3, 1, "", "sequences"], [3, 3, 1, "", "set_attribute"], [3, 3, 1, "", "set_primary"], [3, 3, 1, "", "star"], [3, 3, 1, "", "sum_deep_degree"], [3, 3, 1, "", "sum_degree"], [3, 3, 1, "", "text"]], "graphbrain.memory": [[3, 0, 0, "-", "leveldb"], [3, 0, 0, "-", "permutations"], [3, 0, 0, "-", "sqlite"]], "graphbrain.memory.leveldb": [[3, 2, 1, "", "LevelDB"]], "graphbrain.memory.leveldb.LevelDB": [[3, 3, 1, "", "add_with_attributes"], [3, 3, 1, "", "all"], [3, 3, 1, "", "all_attributes"], [3, 3, 1, "", "close"], [3, 3, 1, "", "destroy"], [3, 3, 1, "", "name"]], "graphbrain.memory.permutations": [[3, 1, 1, "", "do_with_edge_permutations"], [3, 1, 1, "", "perm2edge"], [3, 1, 1, "", "permutate"], [3, 1, 1, "", "str_plus_1"], [3, 1, 1, "", "unpermutate"]], "graphbrain.memory.sqlite": [[3, 2, 1, "", "SQLite"]], "graphbrain.memory.sqlite.SQLite": [[3, 3, 1, "", "add_with_attributes"], [3, 3, 1, "", "all"], [3, 3, 1, "", "all_attributes"], [3, 3, 1, "", "close"], [3, 3, 1, "", "destroy"], [3, 3, 1, "", "name"]], "graphbrain.parsers": [[3, 0, 0, "-", "__init__"], [3, 0, 0, "-", "parser"]], "graphbrain.parsers.__init__": [[3, 1, 1, "", "create_parser"]], "graphbrain.parsers.parser": [[3, 2, 1, "", "Parser"]], "graphbrain.parsers.parser.Parser": [[3, 3, 1, "", "parse"]], "graphbrain.patterns": [[3, 1, 1, "", "edge_matches_pattern"], [3, 1, 1, "", "is_full_pattern"], [3, 1, 1, "", "is_pattern"], [3, 1, 1, "", "match_pattern"]], "graphbrain.processors": [[3, 0, 0, "-", "actors"], [3, 0, 0, "-", "claims"], [3, 0, 0, "-", "conflicts"], [3, 0, 0, "-", "names"], [3, 0, 0, "-", "number"], [3, 0, 0, "-", "onto"], [3, 0, 0, "-", "taxonomy"]], "graphbrain.processors.actors": [[3, 1, 1, "", "actors"], [3, 1, 1, "", "find_actors"], [3, 1, 1, "", "is_actor"]], "graphbrain.readers": [[3, 0, 0, "-", "csv"], [3, 0, 0, "-", "dir"], [3, 0, 0, "-", "reader"], [3, 0, 0, "-", "reddit"], [3, 0, 0, "-", "txt"], [3, 0, 0, "-", "wikipedia"]], "graphbrain.utils": [[3, 0, 0, "-", "concepts"], [3, 0, 0, "-", "conjunctions"], [3, 0, 0, "-", "corefs"], [3, 0, 0, "-", "lemmas"], [3, 0, 0, "-", "number"], [3, 0, 0, "-", "ontology"]], "graphbrain.utils.concepts": [[3, 1, 1, "", "all_concepts"], [3, 1, 1, "", "has_common_or_proper_concept"], [3, 1, 1, "", "has_proper_concept"], [3, 1, 1, "", "strip_concept"]], "graphbrain.utils.corefs": [[3, 1, 1, "", "are_corefs"], [3, 1, 1, "", "coref_id"], [3, 1, 1, "", "coref_set"], [3, 1, 1, "", "main_coref"], [3, 1, 1, "", "main_coref_from_id"], [3, 1, 1, "", "make_corefs"]], "graphbrain.utils.lemmas": [[3, 1, 1, "", "deep_lemma"], [3, 1, 1, "", "lemma"], [3, 1, 1, "", "lemma_degrees"]], "graphbrain.utils.ontology": [[3, 1, 1, "", "subtypes"], [3, 1, 1, "", "supertypes"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"graphbrain": [0, 8, 9], "languag": [0, 15, 16], "knowledg": [0, 15], "cognit": 0, "content": [0, 2, 9, 22], "indic": 0, "tabl": 0, "instal": 1, "pip": 1, "recommend": 1, "from": [1, 24], "code": 1, "repositori": 1, "github": 1, "For": 1, "develop": 1, "run": [1, 5], "test": [1, 11], "prerequisit": 1, "linux": 1, "maco": [1, 4], "manual": [2, 11], "api": 3, "refer": [3, 6], "main": 3, "function": [3, 8], "hyperedg": [3, 8, 13, 25], "modul": 3, "hypergraph": [3, 4, 8, 10, 13, 15, 25], "pattern": [3, 7, 17, 25], "processor": 3, "coref": 3, "packag": 3, "name": 3, "onto": 3, "mean": 12, "extractor": [], "case_gener": [], "memori": 3, "leveldb": [3, 4, 21], "permut": 3, "sqlite": [3, 4], "parser": [3, 11, 16], "reader": [3, 18], "txt": 3, "dir": 3, "csv": 3, "wikipedia": 3, "reddit": 3, "util": 3, "concept": [3, 13], "conjunct": 3, "lemma": [3, 16, 19], "number": [3, 16], "ontologi": 3, "databas": [4, 10, 15], "backend": [4, 10], "3": 4, "anaconda": 4, "window": 4, "command": 5, "line": 5, "interfac": 5, "creat": [5, 8, 10, 11, 25], "export": 5, "import": 5, "co": 6, "resolut": [6, 16], "discov": 7, "A": 7, "simpl": 7, "exampl": [7, 22], "focus": 7, "explor": 7, "control": 7, "expans": 7, "includ": 7, "explicit": 7, "root": 7, "match": [7, 17], "subtyp": [7, 13], "build": 7, "your": 7, "own": 7, "basic": 8, "oper": [8, 25], "The": 8, "two": 8, "central": 8, "hgraph": 8, "hedg": 8, "manipul": 8, "popul": 8, "ad": 8, "mani": 8, "batch": 8, "speed": 8, "neighborhood": 8, "star": 8, "contain": 8, "given": 8, "set": 8, "search": [8, 17, 25], "degre": 8, "deep": 8, "attribut": 8, "local": 8, "global": 8, "counter": 8, "work": [8, 27], "sequenc": 8, "intern": 9, "extend": [9, 11], "new": [10, 11, 24], "train": 11, "alphabeta": 11, "class": 11, "collect": 11, "corpu": 11, "sampl": 11, "text": 11, "extract": [11, 12, 17, 24], "sentenc": [11, 25, 27], "annot": 11, "gener": 11, "dataset": 11, "split": 11, "alpha": 11, "data": 11, "stage": 11, "semant": 13, "notat": 13, "type": 13, "infer": [13, 16], "rule": [13, 15], "argument": 13, "role": 13, "predic": 13, "builder": 13, "modifi": 13, "trigger": 13, "further": 13, "specif": 13, "addit": 13, "inform": [13, 17], "namespac": 13, "full": 13, "atom": 13, "structur": 13, "special": [13, 19], "notebook": [14, 27], "visual": 14, "overview": 15, "As": 15, "syntact": 15, "model": 15, "agent": 15, "pars": [16, 25, 26, 27], "natur": 16, "level": 16, "corefer": [16, 19], "gender": 16, "animaci": 16, "wildcard": 17, "non": 17, "strict": 17, "argrol": 17, "variabl": 17, "relat": 19, "taxonomi": [3, 19], "team": 20, "thank": 21, "spaci": 21, "hug": 21, "face": 21, "": 21, "neuralcoref": 21, "tutori": 22, "actor": [3, 23], "make": 23, "claim": [3, 23], "conflict": [3, 24], "network": 24, "header": 24, "an": 25, "add": 25, "iter": 25, "through": 25, "all": 25, "edg": 25, "book": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Graphbrain \u2013 Language, Knowledge, Cognition": [[0, "graphbrain-language-knowledge-cognition"]], "Contents:": [[0, null], [2, null], [9, null], [22, null]], "Indices and tables": [[0, "indices-and-tables"]], "Installation": [[1, "installation"]], "Install with pip (recommended)": [[1, "install-with-pip-recommended"]], "Install from the code repository (github)": [[1, "install-from-the-code-repository-github"]], "For developers": [[1, "for-developers"]], "Run tests": [[1, "run-tests"]], "Prerequisites": [[1, "prerequisites"]], "Linux": [[1, "linux"]], "macOS": [[1, "macos"], [4, "macos"]], "Manual": [[2, "manual"]], "Hypergraph database backends": [[4, "hypergraph-database-backends"]], "SQLite 3": [[4, "sqlite-3"]], "LevelDB": [[4, "leveldb"], [21, "leveldb"]], "Anaconda on macOS": [[4, "anaconda-on-macos"]], "Windows": [[4, "windows"]], "Command-line interface": [[5, "command-line-interface"]], "Commands": [[5, "commands"]], "create": [[5, "create"]], "export": [[5, "export"]], "import": [[5, "import"]], "run": [[5, "run"]], "Co-reference resolution": [[6, "co-reference-resolution"]], "Discovering patterns": [[7, "discovering-patterns"]], "A simple example": [[7, "a-simple-example"]], "Focusing the exploration by controlling expansions": [[7, "focusing-the-exploration-by-controlling-expansions"]], "Including explicit roots in the patterns": [[7, "including-explicit-roots-in-the-patterns"]], "Matching subtypes": [[7, "matching-subtypes"]], "Build your own": [[7, "build-your-own"]], "Basic hypergraph operations": [[8, "basic-hypergraph-operations"]], "The two central functions of Graphbrain: hgraph() and hedge()": [[8, "the-two-central-functions-of-graphbrain-hgraph-and-hedge"]], "Creating and manipulating hyperedges": [[8, "creating-and-manipulating-hyperedges"]], "Creating and populating hypergraphs": [[8, "creating-and-populating-hypergraphs"]], "Adding many hyperedges as a batch (for speed)": [[8, "adding-many-hyperedges-as-a-batch-for-speed"]], "The neighborhood of a hyperedge (star)": [[8, "the-neighborhood-of-a-hyperedge-star"]], "Hyperedges containing a given set of hyperedges": [[8, "hyperedges-containing-a-given-set-of-hyperedges"]], "Searching for hyperedges": [[8, "searching-for-hyperedges"]], "Degrees and deep degrees": [[8, "degrees-and-deep-degrees"]], "Hyperedge attributes": [[8, "hyperedge-attributes"]], "Local and global counters": [[8, "local-and-global-counters"]], "Working with hyperedge sequences": [[8, "working-with-hyperedge-sequences"]], "Internals and extending Graphbrain": [[9, "internals-and-extending-graphbrain"]], "Creating a new hypergraph database backend": [[10, "creating-a-new-hypergraph-database-backend"]], "Creating and training a new parser": [[11, "creating-and-training-a-new-parser"]], "Extending the AlphaBeta class": [[11, "extending-the-alphabeta-class"]], "Collecting a corpus of sample texts": [[11, "collecting-a-corpus-of-sample-texts"]], "Extracting sentences": [[11, "extracting-sentences"]], "Annotating sentences to generate a parser training dataset": [[11, "annotating-sentences-to-generate-a-parser-training-dataset"]], "Splitting into training and testing datasets": [[11, "splitting-into-training-and-testing-datasets"]], "Generating alpha training data": [[11, "generating-alpha-training-data"]], "Testing the alpha stage": [[11, "testing-the-alpha-stage"]], "Manual parser testing": [[11, "manual-parser-testing"]], "Meaning extraction": [[12, "meaning-extraction"]], "Semantic Hypergraph notation": [[13, "semantic-hypergraph-notation"]], "Hyperedge types": [[13, "hyperedge-types"]], "Type inference rules": [[13, "type-inference-rules"]], "Argument roles": [[13, "argument-roles"]], "Predicates": [[13, "predicates"], [13, "id1"]], "Builders": [[13, "builders"]], "Subtypes": [[13, "subtypes"]], "Concept": [[13, "concept"]], "Predicate": [[13, "predicate"]], "Builder": [[13, "builder"]], "Modifier": [[13, "modifier"]], "Trigger": [[13, "trigger"]], "Further type-specific additional information": [[13, "further-type-specific-additional-information"]], "Concepts": [[13, "concepts"]], "Modifiers": [[13, "modifiers"]], "Namespaces": [[13, "namespaces"]], "Full atom structure": [[13, "full-atom-structure"]], "Special atoms": [[13, "special-atoms"]], "Notebooks and visualizations": [[14, "notebooks-and-visualizations"]], "Overview": [[15, "overview"]], "Hypergraphs": [[15, "hypergraphs"]], "As language: syntactic rules": [[15, "as-language-syntactic-rules"]], "As knowledge model": [[15, "as-knowledge-model"]], "As database": [[15, "as-database"]], "Knowledge Agents": [[15, "knowledge-agents"]], "Parsing natural language": [[16, "parsing-natural-language"]], "Lemmas": [[16, "lemmas"], [19, "lemmas"]], "Parser-level coreference resolution and inference of gender, number and animacy": [[16, "parser-level-coreference-resolution-and-inference-of-gender-number-and-animacy"]], "Patterns": [[17, "patterns"]], "Searching with wildcards": [[17, "searching-with-wildcards"]], "Non-strict search": [[17, "non-strict-search"]], "Matching argroles": [[17, "matching-argroles"]], "Patterns with variables for information extraction": [[17, "patterns-with-variables-for-information-extraction"]], "Readers": [[18, "readers"]], "Special relations": [[19, "special-relations"]], "Coreferences": [[19, "coreferences"]], "Taxonomies": [[19, "taxonomies"]], "Team": [[20, "team"]], "Thanks": [[21, "thanks"]], "spaCy": [[21, "spacy"]], "Hugging Face\u2019s NeuralCoref": [[21, "hugging-face-s-neuralcoref"]], "Tutorials and examples": [[22, "tutorials-and-examples"]], "Actors making claims": [[23, "actors-making-claims"]], "Extracting conflict networks from news headers": [[24, "extracting-conflict-networks-from-news-headers"]], "Hypergraph operations": [[25, "hypergraph-operations"]], "Create an hypergraph": [[25, "create-an-hypergraph"]], "Parse sentence and add hyperedge to hypergraph": [[25, "parse-sentence-and-add-hyperedge-to-hypergraph"]], "Iterate through all edges": [[25, "iterate-through-all-edges"]], "Search with patterns": [[25, "search-with-patterns"]], "Parsing a book": [[26, "parsing-a-book"]], "Parsing a sentence": [[27, "parsing-a-sentence"]], "Working with notebooks": [[27, "working-with-notebooks"]], "API reference": [[3, "api-reference"]], "main functions": [[3, "module-graphbrain.__init__"]], "hyperedge module": [[3, "module-graphbrain.hyperedge"]], "hypergraph module": [[3, "module-graphbrain.hypergraph"]], "patterns module": [[3, "module-graphbrain.patterns"]], "processor module": [[3, "module-graphbrain.processor"]], "memory package": [[3, "memory-package"]], "leveldb module": [[3, "module-graphbrain.memory.leveldb"]], "permutations module": [[3, "module-graphbrain.memory.permutations"]], "sqlite module": [[3, "module-graphbrain.memory.sqlite"]], "parsers package": [[3, "parsers-package"]], "package functions": [[3, "module-graphbrain.parsers.__init__"]], "parser module": [[3, "module-graphbrain.parsers.parser"]], "readers package": [[3, "readers-package"]], "reader module": [[3, "module-graphbrain.readers.reader"]], "txt module": [[3, "module-graphbrain.readers.txt"]], "dir module": [[3, "module-graphbrain.readers.dir"]], "csv module": [[3, "module-graphbrain.readers.csv"]], "wikipedia module": [[3, "module-graphbrain.readers.wikipedia"]], "reddit module": [[3, "module-graphbrain.readers.reddit"]], "utils package": [[3, "utils-package"]], "concepts module": [[3, "module-graphbrain.utils.concepts"]], "conjunctions module": [[3, "module-graphbrain.utils.conjunctions"]], "corefs module": [[3, "module-graphbrain.utils.corefs"]], "lemmas module": [[3, "module-graphbrain.utils.lemmas"]], "number module": [[3, "module-graphbrain.utils.number"], [3, "id1"]], "ontology module": [[3, "module-graphbrain.utils.ontology"]], "processors package": [[3, "processors-package"]], "actors module": [[3, "module-graphbrain.processors.actors"]], "claims module": [[3, "module-graphbrain.processors.claims"]], "conflicts module": [[3, "module-graphbrain.processors.conflicts"]], "names module": [[3, "module-graphbrain.processors.names"]], "onto module": [[3, "module-graphbrain.processors.onto"]], "taxonomy module": [[3, "module-graphbrain.processors.taxonomy"]]}, "indexentries": {"atom (class in graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.Atom"]], "hyperedge (class in graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.Hyperedge"]], "hypergraph (class in graphbrain.hypergraph)": [[3, "graphbrain.hypergraph.Hypergraph"]], "leveldb (class in graphbrain.memory.leveldb)": [[3, "graphbrain.memory.leveldb.LevelDB"]], "parser (class in graphbrain.parsers.parser)": [[3, "graphbrain.parsers.parser.Parser"]], "sqlite (class in graphbrain.memory.sqlite)": [[3, "graphbrain.memory.sqlite.SQLite"]], "uniqueatom (class in graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.UniqueAtom"]], "actors() (in module graphbrain.processors.actors)": [[3, "graphbrain.processors.actors.actors"]], "add() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.add"]], "add_to_sequence() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.add_to_sequence"]], "add_with_attributes() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.add_with_attributes"]], "add_with_attributes() (graphbrain.memory.leveldb.leveldb method)": [[3, "graphbrain.memory.leveldb.LevelDB.add_with_attributes"]], "add_with_attributes() (graphbrain.memory.sqlite.sqlite method)": [[3, "graphbrain.memory.sqlite.SQLite.add_with_attributes"]], "all() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.all"]], "all() (graphbrain.memory.leveldb.leveldb method)": [[3, "graphbrain.memory.leveldb.LevelDB.all"]], "all() (graphbrain.memory.sqlite.sqlite method)": [[3, "graphbrain.memory.sqlite.SQLite.all"]], "all_atoms() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.all_atoms"]], "all_atoms() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.all_atoms"]], "all_atoms() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.all_atoms"]], "all_attributes() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.all_attributes"]], "all_attributes() (graphbrain.memory.leveldb.leveldb method)": [[3, "graphbrain.memory.leveldb.LevelDB.all_attributes"]], "all_attributes() (graphbrain.memory.sqlite.sqlite method)": [[3, "graphbrain.memory.sqlite.SQLite.all_attributes"]], "all_concepts() (in module graphbrain.utils.concepts)": [[3, "graphbrain.utils.concepts.all_concepts"]], "all_non_atoms() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.all_non_atoms"]], "are_corefs() (in module graphbrain.utils.corefs)": [[3, "graphbrain.utils.corefs.are_corefs"]], "argroles() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.argroles"]], "argroles() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.argroles"]], "atom (graphbrain.hyperedge.atom property)": [[3, "graphbrain.hyperedge.Atom.atom"]], "atom (graphbrain.hyperedge.hyperedge property)": [[3, "graphbrain.hyperedge.Hyperedge.atom"]], "atom_with_type() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.atom_with_type"]], "atom_with_type() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.atom_with_type"]], "atoms() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.atoms"]], "atoms() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.atoms"]], "atoms_with_root() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.atoms_with_root"]], "build_atom() (in module graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.build_atom"]], "close() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.close"]], "close() (graphbrain.memory.leveldb.leveldb method)": [[3, "graphbrain.memory.leveldb.LevelDB.close"]], "close() (graphbrain.memory.sqlite.sqlite method)": [[3, "graphbrain.memory.sqlite.SQLite.close"]], "connect() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.connect"]], "connector_atom() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.connector_atom"]], "connector_atom() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.connector_atom"]], "connector_type() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.connector_type"]], "connector_type() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.connector_type"]], "contains() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.contains"]], "contains() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.contains"]], "contains_atom_type() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.contains_atom_type"]], "coref_id() (in module graphbrain.utils.corefs)": [[3, "graphbrain.utils.corefs.coref_id"]], "coref_set() (in module graphbrain.utils.corefs)": [[3, "graphbrain.utils.corefs.coref_set"]], "count() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.count"]], "create_parser() (in module graphbrain.parsers.__init__)": [[3, "graphbrain.parsers.__init__.create_parser"]], "dec_attribute() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.dec_attribute"]], "deep_degree() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.deep_degree"]], "deep_lemma() (in module graphbrain.utils.lemmas)": [[3, "graphbrain.utils.lemmas.deep_lemma"]], "degree() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.degree"]], "depth() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.depth"]], "depth() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.depth"]], "destroy() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.destroy"]], "destroy() (graphbrain.memory.leveldb.leveldb method)": [[3, "graphbrain.memory.leveldb.LevelDB.destroy"]], "destroy() (graphbrain.memory.sqlite.sqlite method)": [[3, "graphbrain.memory.sqlite.SQLite.destroy"]], "do_with_edge_permutations() (in module graphbrain.memory.permutations)": [[3, "graphbrain.memory.permutations.do_with_edge_permutations"]], "edge_matches_pattern() (in module graphbrain.patterns)": [[3, "graphbrain.patterns.edge_matches_pattern"]], "edges2str() (in module graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.edges2str"]], "edges_with_argrole() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.edges_with_argrole"]], "edges_with_argrole() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.edges_with_argrole"]], "edges_with_edges() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.edges_with_edges"]], "ego() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.ego"]], "exists() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.exists"]], "find_actors() (in module graphbrain.processors.actors)": [[3, "graphbrain.processors.actors.find_actors"]], "get_float_attribute() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.get_float_attribute"]], "get_int_attribute() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.get_int_attribute"]], "get_str_attribute() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.get_str_attribute"]], "graphbrain.__init__": [[3, "module-graphbrain.__init__"]], "graphbrain.hyperedge": [[3, "module-graphbrain.hyperedge"]], "graphbrain.hypergraph": [[3, "module-graphbrain.hypergraph"]], "graphbrain.memory.leveldb": [[3, "module-graphbrain.memory.leveldb"]], "graphbrain.memory.permutations": [[3, "module-graphbrain.memory.permutations"]], "graphbrain.memory.sqlite": [[3, "module-graphbrain.memory.sqlite"]], "graphbrain.parsers.__init__": [[3, "module-graphbrain.parsers.__init__"]], "graphbrain.parsers.parser": [[3, "module-graphbrain.parsers.parser"]], "graphbrain.patterns": [[3, "module-graphbrain.patterns"]], "graphbrain.processor": [[3, "module-graphbrain.processor"]], "graphbrain.processors.actors": [[3, "module-graphbrain.processors.actors"]], "graphbrain.processors.claims": [[3, "module-graphbrain.processors.claims"]], "graphbrain.processors.conflicts": [[3, "module-graphbrain.processors.conflicts"]], "graphbrain.processors.names": [[3, "module-graphbrain.processors.names"]], "graphbrain.processors.number": [[3, "module-graphbrain.processors.number"]], "graphbrain.processors.onto": [[3, "module-graphbrain.processors.onto"]], "graphbrain.processors.taxonomy": [[3, "module-graphbrain.processors.taxonomy"]], "graphbrain.readers.csv": [[3, "module-graphbrain.readers.csv"]], "graphbrain.readers.dir": [[3, "module-graphbrain.readers.dir"]], "graphbrain.readers.reader": [[3, "module-graphbrain.readers.reader"]], "graphbrain.readers.reddit": [[3, "module-graphbrain.readers.reddit"]], "graphbrain.readers.txt": [[3, "module-graphbrain.readers.txt"]], "graphbrain.readers.wikipedia": [[3, "module-graphbrain.readers.wikipedia"]], "graphbrain.utils.concepts": [[3, "module-graphbrain.utils.concepts"]], "graphbrain.utils.conjunctions": [[3, "module-graphbrain.utils.conjunctions"]], "graphbrain.utils.corefs": [[3, "module-graphbrain.utils.corefs"]], "graphbrain.utils.lemmas": [[3, "module-graphbrain.utils.lemmas"]], "graphbrain.utils.number": [[3, "module-graphbrain.utils.number"]], "graphbrain.utils.ontology": [[3, "module-graphbrain.utils.ontology"]], "has_common_or_proper_concept() (in module graphbrain.utils.concepts)": [[3, "graphbrain.utils.concepts.has_common_or_proper_concept"]], "has_proper_concept() (in module graphbrain.utils.concepts)": [[3, "graphbrain.utils.concepts.has_proper_concept"]], "hedge() (in module graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.hedge"]], "hgraph() (in module graphbrain.__init__)": [[3, "graphbrain.__init__.hgraph"]], "inc_attribute() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.inc_attribute"]], "inner_atom() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.inner_atom"]], "inner_atom() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.inner_atom"]], "insert_argrole() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.insert_argrole"]], "insert_argrole() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.insert_argrole"]], "insert_edge_with_argrole() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.insert_edge_with_argrole"]], "insert_first_argument() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.insert_first_argument"]], "insert_first_argument() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.insert_first_argument"]], "is_actor() (in module graphbrain.processors.actors)": [[3, "graphbrain.processors.actors.is_actor"]], "is_atom() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.is_atom"]], "is_atom() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.is_atom"]], "is_full_pattern() (in module graphbrain.patterns)": [[3, "graphbrain.patterns.is_full_pattern"]], "is_pattern() (in module graphbrain.patterns)": [[3, "graphbrain.patterns.is_pattern"]], "is_primary() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.is_primary"]], "label() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.label"]], "label() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.label"]], "lemma() (in module graphbrain.utils.lemmas)": [[3, "graphbrain.utils.lemmas.lemma"]], "lemma_degrees() (in module graphbrain.utils.lemmas)": [[3, "graphbrain.utils.lemmas.lemma_degrees"]], "main_concepts() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.main_concepts"]], "main_concepts() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.main_concepts"]], "main_coref() (in module graphbrain.utils.corefs)": [[3, "graphbrain.utils.corefs.main_coref"]], "main_coref_from_id() (in module graphbrain.utils.corefs)": [[3, "graphbrain.utils.corefs.main_coref_from_id"]], "make_corefs() (in module graphbrain.utils.corefs)": [[3, "graphbrain.utils.corefs.make_corefs"]], "match_pattern() (in module graphbrain.patterns)": [[3, "graphbrain.patterns.match_pattern"]], "module": [[3, "module-graphbrain.__init__"], [3, "module-graphbrain.hyperedge"], [3, "module-graphbrain.hypergraph"], [3, "module-graphbrain.memory.leveldb"], [3, "module-graphbrain.memory.permutations"], [3, "module-graphbrain.memory.sqlite"], [3, "module-graphbrain.parsers.__init__"], [3, "module-graphbrain.parsers.parser"], [3, "module-graphbrain.patterns"], [3, "module-graphbrain.processor"], [3, "module-graphbrain.processors.actors"], [3, "module-graphbrain.processors.claims"], [3, "module-graphbrain.processors.conflicts"], [3, "module-graphbrain.processors.names"], [3, "module-graphbrain.processors.number"], [3, "module-graphbrain.processors.onto"], [3, "module-graphbrain.processors.taxonomy"], [3, "module-graphbrain.readers.csv"], [3, "module-graphbrain.readers.dir"], [3, "module-graphbrain.readers.reader"], [3, "module-graphbrain.readers.reddit"], [3, "module-graphbrain.readers.txt"], [3, "module-graphbrain.readers.wikipedia"], [3, "module-graphbrain.utils.concepts"], [3, "module-graphbrain.utils.conjunctions"], [3, "module-graphbrain.utils.corefs"], [3, "module-graphbrain.utils.lemmas"], [3, "module-graphbrain.utils.number"], [3, "module-graphbrain.utils.ontology"]], "name() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.name"]], "name() (graphbrain.memory.leveldb.leveldb method)": [[3, "graphbrain.memory.leveldb.LevelDB.name"]], "name() (graphbrain.memory.sqlite.sqlite method)": [[3, "graphbrain.memory.sqlite.SQLite.name"]], "not_atom (graphbrain.hyperedge.atom property)": [[3, "graphbrain.hyperedge.Atom.not_atom"]], "not_atom (graphbrain.hyperedge.hyperedge property)": [[3, "graphbrain.hyperedge.Hyperedge.not_atom"]], "parse() (graphbrain.parsers.parser.parser method)": [[3, "graphbrain.parsers.parser.Parser.parse"]], "parts() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.parts"]], "perm2edge() (in module graphbrain.memory.permutations)": [[3, "graphbrain.memory.permutations.perm2edge"]], "permutate() (in module graphbrain.memory.permutations)": [[3, "graphbrain.memory.permutations.permutate"]], "remove() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.remove"]], "remove_by_pattern() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.remove_by_pattern"]], "replace_argroles() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.replace_argroles"]], "replace_argroles() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.replace_argroles"]], "replace_atom() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.replace_atom"]], "replace_atom() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.replace_atom"]], "replace_atom_part() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.replace_atom_part"]], "replace_main_concept() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.replace_main_concept"]], "replace_main_concept() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.replace_main_concept"]], "role() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.role"]], "root() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.root"]], "root_degrees() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.root_degrees"]], "roots() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.roots"]], "roots() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.roots"]], "search() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.search"]], "sequence() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.sequence"]], "sequence() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.sequence"]], "sequences() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.sequences"]], "set_attribute() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.set_attribute"]], "set_primary() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.set_primary"]], "simplify() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.simplify"]], "simplify() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.simplify"]], "size() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.size"]], "size() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.size"]], "split_edge_str() (in module graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.split_edge_str"]], "star() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.star"]], "str2atom() (in module graphbrain.hyperedge)": [[3, "graphbrain.hyperedge.str2atom"]], "str_plus_1() (in module graphbrain.memory.permutations)": [[3, "graphbrain.memory.permutations.str_plus_1"]], "strip_concept() (in module graphbrain.utils.concepts)": [[3, "graphbrain.utils.concepts.strip_concept"]], "subedges() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.subedges"]], "subedges() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.subedges"]], "subtypes() (in module graphbrain.utils.ontology)": [[3, "graphbrain.utils.ontology.subtypes"]], "sum_deep_degree() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.sum_deep_degree"]], "sum_degree() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.sum_degree"]], "supertypes() (in module graphbrain.utils.ontology)": [[3, "graphbrain.utils.ontology.supertypes"]], "text() (graphbrain.hypergraph.hypergraph method)": [[3, "graphbrain.hypergraph.Hypergraph.text"]], "to_str() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.to_str"]], "to_str() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.to_str"]], "type() (graphbrain.hyperedge.atom method)": [[3, "graphbrain.hyperedge.Atom.type"]], "type() (graphbrain.hyperedge.hyperedge method)": [[3, "graphbrain.hyperedge.Hyperedge.type"]], "unpermutate() (in module graphbrain.memory.permutations)": [[3, "graphbrain.memory.permutations.unpermutate"]]}})